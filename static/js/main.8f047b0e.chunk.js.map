{"version":3,"sources":["components/FourCardHolder/FourCardHolder.module.css","components/Card/Card.module.css","assets/undraw_data.svg","assets/undraw_team_spirit_hrr4.svg","assets/undraw_location_search_bqps.svg","assets/undraw_new_ideas_jdea.svg","components/Card/Card.js","components/FourCardHolder/FourCardHolder.js","components/FourCardTopInfo/FourCardTopInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","title","body","icon","topColor","console","log","className","styles","container","style","backgroundColor","height","padding","color","fontWeight","fontSize","textAlign","display","flexDirection","src","alt","width","FourCardHolder","endHolder","supervisor","middleHolder","team","idea","data_svg","FourCardTopInfo","margin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,UAAY,kCAAkC,UAAY,kCAAkC,aAAe,uC,kBCA7HD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,QAAU,sBAAsB,SAAW,yB,gBCDjID,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,yD,gBCA3CD,EAAOC,QAAU,IAA0B,mD,+KC8B5BC,EA3BF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAE/B,OADAC,QAAQC,IAAIH,GAER,yBAAKI,UAAWC,IAAOC,WACnB,yBAAKC,MAAO,CAACC,gBAAiBP,EAAUQ,OAAQ,SAChD,6BAASF,MAAO,CAACG,QAAS,SACtB,4BAAQH,MAAO,CAACI,MAAO,UAAWC,WAAY,MAAOC,SAAU,OAAQC,UAAW,SAC7EhB,GAEL,uBAAGS,MAAO,CAACO,UAAW,OAAQH,MAAO,OAAQE,SAAU,YAClDd,GAEL,yBAAKQ,MAAO,CAACQ,QAAS,OAAQC,cAAe,gBACzC,yBACIC,IAAKjB,EACLkB,IAAI,YACJT,OAAO,KACPU,MAAM,W,gFC2BfC,EAtCQ,WACnB,OACI,yBAAKhB,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOgB,WACnB,kBAAC,EAAD,CACIvB,MAAO,aACPC,KAAM,mDACNE,SAAU,UACVD,KAAMsB,OAGd,yBAAKlB,UAAWC,IAAOkB,cACnB,kBAAC,EAAD,CACIzB,MAAO,eACPC,KAAM,sEACNE,SAAU,UACVD,KAAMwB,MAEV,kBAAC,EAAD,CACI1B,MAAO,QACPC,KAAM,mDACNE,SAAU,UACVD,KAAMyB,OAGd,yBAAKrB,UAAWC,IAAOgB,WACnB,kBAAC,EAAD,CACIvB,MAAO,aACPC,KAAM,sEACNE,SAAU,UACVD,KAAM0B,SCjBXC,EApBS,WACpB,OACI,yBAAKpB,MAAO,CAACqB,OAAQ,WACjB,gCACI,0BAAMrB,MAAO,CAACI,MAAO,OAAQE,SAAU,WAAvC,gCAGA,6BACA,0BAAMN,MAAO,CAACI,MAAO,UAAWC,WAAY,MAAOC,SAAU,YAA7D,0BAIJ,uBAAGN,MAAO,CAACI,MAAO,OAAQE,SAAU,YAApC,0EAC2E,6BAD3E,sDCAGgB,MATf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGc0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7C,QAAQ6C,MAAMA,EAAMC,c","file":"static/js/main.8f047b0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FourCardHolder_container__3_gxk\",\"endHolder\":\"FourCardHolder_endHolder__34ni-\",\"middleHolder\":\"FourCardHolder_middleHolder__c8qok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3TziX\",\"topLine\":\"Card_topLine__3cR-f\",\"leftBar\":\"Card_leftBar__c4qF-\",\"rightBar\":\"Card_rightBar__3wMr5\"};","module.exports = __webpack_public_path__ + \"static/media/undraw_data.0d159573.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_team_spirit_hrr4.ded998bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_location_search_bqps.1f92f60c.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_new_ideas_jdea.42d1b993.svg\";","import React from 'react';\r\nimport styles from './Card.module.css';\r\n\r\nconst Card = ({ title, body, icon, topColor }) => {\r\n    console.log(icon);\r\n    return (\r\n        <div className={styles.container}>\r\n            <div style={{backgroundColor: topColor, height: '5px'}}></div>\r\n            <article style={{padding: '1rem'}}>\r\n                <header style={{color: '#4c4c4c', fontWeight: '500', fontSize: '1rem', textAlign: 'left'}}>\r\n                    {title}\r\n                </header>\r\n                <p style={{textAlign: 'left', color: '#aaa', fontSize: '0.85rem'}}>\r\n                    {body}\r\n                </p>\r\n                <div style={{display: 'flex', flexDirection: 'row-reverse'}}>\r\n                    <img \r\n                        src={icon} \r\n                        alt=\"data icon\"\r\n                        height=\"75\"\r\n                        width=\"75\" \r\n                    />\r\n                </div>\r\n\r\n                \r\n            </article>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport styles from './FourCardHolder.module.css';\r\n\r\nimport data_svg from '../../assets/undraw_data.svg';\r\nimport team from \"../../assets/undraw_team_spirit_hrr4.svg\";\r\nimport supervisor from \"../../assets/undraw_location_search_bqps.svg\";\r\nimport idea from \"../../assets/undraw_new_ideas_jdea.svg\";\r\n\r\nconst FourCardHolder = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.endHolder}>\r\n                <Card \r\n                    title={\"Supervisor\"}\r\n                    body={\"Monitors activity to identify project roadblocks\"}\r\n                    topColor={\"#76d1d4\"}\r\n                    icon={supervisor}\r\n                />\r\n            </div>\r\n            <div className={styles.middleHolder}>\r\n                <Card \r\n                    title={\"Team Builder\"}\r\n                    body={\"Scans our talent network to create an optimal team for your project\"}\r\n                    topColor={\"#e6575a\"}\r\n                    icon={team}\r\n                />\r\n                <Card\r\n                    title={\"Karma\"}\r\n                    body={\"Regularly evaluates our talent to ensure quality\"}\r\n                    topColor={\"#e8a741\"}\r\n                    icon={idea}\r\n                />\r\n            </div>\r\n            <div className={styles.endHolder}>\r\n                <Card \r\n                    title={\"Calculator\"}\r\n                    body={\"Uses data from past projects to provide better delivery estimations\"}\r\n                    topColor={\"#7ba6d5\"}\r\n                    icon={data_svg}\r\n                />\r\n            </div>\r\n            \r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default FourCardHolder;","import React from 'react';\r\n\r\nconst FourCardTopInfo = () => {\r\n    return (\r\n        <div style={{margin: '5rem 0'}}>\r\n            <header>\r\n                <span style={{color: '#999', fontSize: '1.5rem'}}>\r\n                    Reliable, efficient delivery\r\n                </span>\r\n                <br />\r\n                <span style={{color: '#4c4c4c', fontWeight: '500', fontSize: '1.55rem'}}>\r\n                    Powered by Technology\r\n                </span>\r\n            </header>\r\n            <p style={{color: '#aaa', fontSize: '0.85rem'}}>\r\n                Our Artificial intelligence powered tools use millions of project data <br />\r\n                points to ensure that your project is successful\r\n            </p>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default FourCardTopInfo;","import React from 'react';\nimport './App.css';\nimport FourCardHolder from './components/FourCardHolder/FourCardHolder';\nimport FourCardTopInfo from './components/FourCardTopInfo/FourCardTopInfo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FourCardTopInfo />\n      <FourCardHolder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}